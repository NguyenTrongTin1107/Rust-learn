{"message":"expected a `std::ops::Fn<(yew::InputEvent,)>` closure, found `yew::Callback<yew::KeyboardEvent>`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2156,"byte_end":2163,"line_start":72,"line_end":72,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"                        oninput={oninput}","highlight_start":34,"highlight_end":41}],"label":"expected an `Fn<(yew::InputEvent,)>` closure, found `yew::Callback<yew::KeyboardEvent>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1517,"byte_end":2356,"line_start":55,"line_end":77,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        html! {","highlight_start":9,"highlight_end":16},{"text":"            <div class=\"container\">","highlight_start":1,"highlight_end":36},{"text":"                <h2>{\"Todo List\"}</h2>","highlight_start":1,"highlight_end":39},{"text":"                <p>{self.count}</p>","highlight_start":1,"highlight_end":36},{"text":"                <div>","highlight_start":1,"highlight_end":22},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    self.todos.clone().into_iter().map(|content| {","highlight_start":1,"highlight_end":67},{"text":"                        html! {","highlight_start":1,"highlight_end":32},{"text":"                            <div key={content.clone()}>","highlight_start":1,"highlight_end":56},{"text":"                                {format!(\"# {}\", content)}","highlight_start":1,"highlight_end":59},{"text":"                            </div>","highlight_start":1,"highlight_end":35},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }).collect::<Html>()","highlight_start":1,"highlight_end":41},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                </div> ","highlight_start":1,"highlight_end":24},{"text":"                <div class=\"input_container\">    ","highlight_start":1,"highlight_end":50},{"text":"                    <input type=\"text\"","highlight_start":1,"highlight_end":39},{"text":"                        oninput={oninput}","highlight_start":1,"highlight_end":42},{"text":"                        value={self.input.clone()}/>","highlight_start":1,"highlight_end":53},{"text":"                    <button onclick={link.callback(|_| Msg::AddTodo)}>{\"Add\"}</button>","highlight_start":1,"highlight_end":87},{"text":"                </div>","highlight_start":1,"highlight_end":23},{"text":"            </div>","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":1517,"byte_end":2356,"line_start":55,"line_end":77,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        html! {","highlight_start":9,"highlight_end":16},{"text":"            <div class=\"container\">","highlight_start":1,"highlight_end":36},{"text":"                <h2>{\"Todo List\"}</h2>","highlight_start":1,"highlight_end":39},{"text":"                <p>{self.count}</p>","highlight_start":1,"highlight_end":36},{"text":"                <div>","highlight_start":1,"highlight_end":22},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    self.todos.clone().into_iter().map(|content| {","highlight_start":1,"highlight_end":67},{"text":"                        html! {","highlight_start":1,"highlight_end":32},{"text":"                            <div key={content.clone()}>","highlight_start":1,"highlight_end":56},{"text":"                                {format!(\"# {}\", content)}","highlight_start":1,"highlight_end":59},{"text":"                            </div>","highlight_start":1,"highlight_end":35},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }).collect::<Html>()","highlight_start":1,"highlight_end":41},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                </div> ","highlight_start":1,"highlight_end":24},{"text":"                <div class=\"input_container\">    ","highlight_start":1,"highlight_end":50},{"text":"                    <input type=\"text\"","highlight_start":1,"highlight_end":39},{"text":"                        oninput={oninput}","highlight_start":1,"highlight_end":42},{"text":"                        value={self.input.clone()}/>","highlight_start":1,"highlight_end":53},{"text":"                    <button onclick={link.callback(|_| Msg::AddTodo)}>{\"Add\"}</button>","highlight_start":1,"highlight_end":87},{"text":"                </div>","highlight_start":1,"highlight_end":23},{"text":"            </div>","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"html!","def_site_span":{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-macro-0.19.3/src/lib.rs","byte_start":2679,"byte_end":2725,"line_start":108,"line_end":108,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"pub fn html(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::ops::Fn<(yew::InputEvent,)>` is not implemented for `yew::Callback<yew::KeyboardEvent>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `yew::html::IntoEventCallback<yew::InputEvent>` for `yew::Callback<yew::KeyboardEvent>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::html::oninput::Wrapper::__macro_new`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs","byte_start":1147,"byte_end":1184,"line_start":30,"line_end":30,"column_start":36,"column_end":73,"is_primary":true,"text":[{"text":"                    callback: impl crate::html::IntoEventCallback<Event>,","highlight_start":36,"highlight_end":73}],"label":"required by this bound in `yew::html::oninput::Wrapper::__macro_new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs","byte_start":195,"byte_end":250,"line_start":5,"line_end":5,"column_start":9,"column_end":64,"is_primary":false,"text":[{"text":"        impl_action!($action($type, false) -> $ret => $convert);","highlight_start":9,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs","byte_start":2354,"byte_end":2495,"line_start":70,"line_end":74,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        impl_action! {","highlight_start":9,"highlight_end":23},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $action($type) -> web_sys::$type  => crate::html::listener::cast_event","highlight_start":1,"highlight_end":87},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs","byte_start":3265,"byte_end":4841,"line_start":132,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_short! {","highlight_start":1,"highlight_end":14},{"text":"    onauxclick(MouseEvent)","highlight_start":1,"highlight_end":27},{"text":"    onclick(MouseEvent)","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    oncontextmenu(MouseEvent)","highlight_start":1,"highlight_end":30},{"text":"    ondblclick(MouseEvent)","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ondrag(DragEvent)","highlight_start":1,"highlight_end":22},{"text":"    ondragend(DragEvent)","highlight_start":1,"highlight_end":25},{"text":"    ondragenter(DragEvent)","highlight_start":1,"highlight_end":27},{"text":"    ondragexit(DragEvent)","highlight_start":1,"highlight_end":26},{"text":"    ondragleave(DragEvent)","highlight_start":1,"highlight_end":27},{"text":"    ondragover(DragEvent)","highlight_start":1,"highlight_end":26},{"text":"    ondragstart(DragEvent)","highlight_start":1,"highlight_end":27},{"text":"    ondrop(DragEvent)","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    onblur(FocusEvent)","highlight_start":1,"highlight_end":23},{"text":"    onfocus(FocusEvent)","highlight_start":1,"highlight_end":24},{"text":"    onfocusin(FocusEvent)","highlight_start":1,"highlight_end":26},{"text":"    onfocusout(FocusEvent)","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    onkeydown(KeyboardEvent)","highlight_start":1,"highlight_end":29},{"text":"    onkeypress(KeyboardEvent)","highlight_start":1,"highlight_end":30},{"text":"    onkeyup(KeyboardEvent)","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    onloadstart(ProgressEvent)","highlight_start":1,"highlight_end":31},{"text":"    onprogress(ProgressEvent)","highlight_start":1,"highlight_end":30},{"text":"    onloadend(ProgressEvent)","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    onmousedown(MouseEvent)","highlight_start":1,"highlight_end":28},{"text":"    onmouseenter(MouseEvent)","highlight_start":1,"highlight_end":29},{"text":"    onmouseleave(MouseEvent)","highlight_start":1,"highlight_end":29},{"text":"    onmousemove(MouseEvent)","highlight_start":1,"highlight_end":28},{"text":"    onmouseout(MouseEvent)","highlight_start":1,"highlight_end":27},{"text":"    onmouseover(MouseEvent)","highlight_start":1,"highlight_end":28},{"text":"    onmouseup(MouseEvent)","highlight_start":1,"highlight_end":26},{"text":"    onwheel(WheelEvent)","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    oninput(InputEvent)","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    onsubmit(FocusEvent)","highlight_start":1,"highlight_end":25},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    onanimationcancel(AnimationEvent)","highlight_start":1,"highlight_end":38},{"text":"    onanimationend(AnimationEvent)","highlight_start":1,"highlight_end":35},{"text":"    onanimationiteration(AnimationEvent)","highlight_start":1,"highlight_end":41},{"text":"    onanimationstart(AnimationEvent)","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ongotpointercapture(PointerEvent)","highlight_start":1,"highlight_end":38},{"text":"    onlostpointercapture(PointerEvent)","highlight_start":1,"highlight_end":39},{"text":"    onpointercancel(PointerEvent)","highlight_start":1,"highlight_end":34},{"text":"    onpointerdown(PointerEvent)","highlight_start":1,"highlight_end":32},{"text":"    onpointerenter(PointerEvent)","highlight_start":1,"highlight_end":33},{"text":"    onpointerleave(PointerEvent)","highlight_start":1,"highlight_end":33},{"text":"    onpointermove(PointerEvent)","highlight_start":1,"highlight_end":32},{"text":"    onpointerout(PointerEvent)","highlight_start":1,"highlight_end":31},{"text":"    onpointerover(PointerEvent)","highlight_start":1,"highlight_end":32},{"text":"    onpointerup(PointerEvent)","highlight_start":1,"highlight_end":30},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ontouchcancel(TouchEvent)","highlight_start":1,"highlight_end":30},{"text":"    ontouchend(TouchEvent)","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ontransitioncancel(TransitionEvent)","highlight_start":1,"highlight_end":40},{"text":"    ontransitionend(TransitionEvent)","highlight_start":1,"highlight_end":37},{"text":"    ontransitionrun(TransitionEvent)","highlight_start":1,"highlight_end":37},{"text":"    ontransitionstart(TransitionEvent)","highlight_start":1,"highlight_end":39},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_short!","def_site_span":{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs","byte_start":2104,"byte_end":2504,"line_start":61,"line_end":76,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_short {","highlight_start":1,"highlight_end":26},{"text":"    ($($action:ident)*) => {","highlight_start":1,"highlight_end":29},{"text":"        impl_action! {","highlight_start":1,"highlight_end":23},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $action(Event) -> web_sys::Event => std::convert::identity","highlight_start":1,"highlight_end":75},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($action:ident($type:ident))*) => {","highlight_start":1,"highlight_end":42},{"text":"        impl_action! {","highlight_start":1,"highlight_end":23},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $action($type) -> web_sys::$type  => crate::html::listener::cast_event","highlight_start":1,"highlight_end":87},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"impl_action!","def_site_span":{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs","byte_start":86,"byte_end":2063,"line_start":3,"line_end":58,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_action {","highlight_start":1,"highlight_end":27},{"text":"    ($($action:ident($type:ident) -> $ret:path => $convert:path)*) => {$(","highlight_start":1,"highlight_end":74},{"text":"        impl_action!($action($type, false) -> $ret => $convert);","highlight_start":1,"highlight_end":65},{"text":"    )*};","highlight_start":1,"highlight_end":9},{"text":"    ($($action:ident($type:ident, $passive:literal) -> $ret:path => $convert:path)*) => {$(","highlight_start":1,"highlight_end":92},{"text":"        /// An abstract implementation of a listener.","highlight_start":1,"highlight_end":54},{"text":"        #[doc(hidden)]","highlight_start":1,"highlight_end":23},{"text":"        pub mod $action {","highlight_start":1,"highlight_end":26},{"text":"            use crate::callback::Callback;","highlight_start":1,"highlight_end":43},{"text":"            use crate::virtual_dom::{Listener, ListenerKind};","highlight_start":1,"highlight_end":62},{"text":"            use std::rc::Rc;","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// A wrapper for a callback which attaches event listeners to elements.","highlight_start":1,"highlight_end":85},{"text":"            #[derive(Clone, Debug)]","highlight_start":1,"highlight_end":36},{"text":"            pub struct Wrapper {","highlight_start":1,"highlight_end":33},{"text":"                callback: Callback<Event>,","highlight_start":1,"highlight_end":43},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            impl Wrapper {","highlight_start":1,"highlight_end":27},{"text":"                /// Create a wrapper for an event-typed callback","highlight_start":1,"highlight_end":65},{"text":"                pub fn new(callback: Callback<Event>) -> Self {","highlight_start":1,"highlight_end":64},{"text":"                    Wrapper { callback }","highlight_start":1,"highlight_end":41},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[doc(hidden)]","highlight_start":1,"highlight_end":31},{"text":"                #[inline]","highlight_start":1,"highlight_end":26},{"text":"                pub fn __macro_new(","highlight_start":1,"highlight_end":36},{"text":"                    callback: impl crate::html::IntoEventCallback<Event>,","highlight_start":1,"highlight_end":74},{"text":"                ) -> Option<Rc<dyn Listener>> {","highlight_start":1,"highlight_end":48},{"text":"                    let callback = callback.into_event_callback()?;","highlight_start":1,"highlight_end":68},{"text":"                    Some(Rc::new(Self::new(callback)))","highlight_start":1,"highlight_end":55},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// And event type which keeps the returned type.","highlight_start":1,"highlight_end":62},{"text":"            pub type Event = $ret;","highlight_start":1,"highlight_end":35},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            impl Listener for Wrapper {","highlight_start":1,"highlight_end":40},{"text":"                fn kind(&self) -> ListenerKind {","highlight_start":1,"highlight_end":49},{"text":"                    ListenerKind::$action","highlight_start":1,"highlight_end":42},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn handle(&self, event: web_sys::Event) {","highlight_start":1,"highlight_end":58},{"text":"                    self.callback.emit($convert(event));","highlight_start":1,"highlight_end":57},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn passive(&self) -> bool {","highlight_start":1,"highlight_end":44},{"text":"                    match &self.callback {","highlight_start":1,"highlight_end":43},{"text":"                        Callback::Callback{passive, ..} => (*passive).unwrap_or($passive),","highlight_start":1,"highlight_end":91},{"text":"                        _ => $passive,","highlight_start":1,"highlight_end":39},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    )*};","highlight_start":1,"highlight_end":9},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"impl_action!","def_site_span":{"file_name":"/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs","byte_start":86,"byte_end":2063,"line_start":3,"line_end":58,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_action {","highlight_start":1,"highlight_end":27},{"text":"    ($($action:ident($type:ident) -> $ret:path => $convert:path)*) => {$(","highlight_start":1,"highlight_end":74},{"text":"        impl_action!($action($type, false) -> $ret => $convert);","highlight_start":1,"highlight_end":65},{"text":"    )*};","highlight_start":1,"highlight_end":9},{"text":"    ($($action:ident($type:ident, $passive:literal) -> $ret:path => $convert:path)*) => {$(","highlight_start":1,"highlight_end":92},{"text":"        /// An abstract implementation of a listener.","highlight_start":1,"highlight_end":54},{"text":"        #[doc(hidden)]","highlight_start":1,"highlight_end":23},{"text":"        pub mod $action {","highlight_start":1,"highlight_end":26},{"text":"            use crate::callback::Callback;","highlight_start":1,"highlight_end":43},{"text":"            use crate::virtual_dom::{Listener, ListenerKind};","highlight_start":1,"highlight_end":62},{"text":"            use std::rc::Rc;","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// A wrapper for a callback which attaches event listeners to elements.","highlight_start":1,"highlight_end":85},{"text":"            #[derive(Clone, Debug)]","highlight_start":1,"highlight_end":36},{"text":"            pub struct Wrapper {","highlight_start":1,"highlight_end":33},{"text":"                callback: Callback<Event>,","highlight_start":1,"highlight_end":43},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            impl Wrapper {","highlight_start":1,"highlight_end":27},{"text":"                /// Create a wrapper for an event-typed callback","highlight_start":1,"highlight_end":65},{"text":"                pub fn new(callback: Callback<Event>) -> Self {","highlight_start":1,"highlight_end":64},{"text":"                    Wrapper { callback }","highlight_start":1,"highlight_end":41},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[doc(hidden)]","highlight_start":1,"highlight_end":31},{"text":"                #[inline]","highlight_start":1,"highlight_end":26},{"text":"                pub fn __macro_new(","highlight_start":1,"highlight_end":36},{"text":"                    callback: impl crate::html::IntoEventCallback<Event>,","highlight_start":1,"highlight_end":74},{"text":"                ) -> Option<Rc<dyn Listener>> {","highlight_start":1,"highlight_end":48},{"text":"                    let callback = callback.into_event_callback()?;","highlight_start":1,"highlight_end":68},{"text":"                    Some(Rc::new(Self::new(callback)))","highlight_start":1,"highlight_end":55},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// And event type which keeps the returned type.","highlight_start":1,"highlight_end":62},{"text":"            pub type Event = $ret;","highlight_start":1,"highlight_end":35},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            impl Listener for Wrapper {","highlight_start":1,"highlight_end":40},{"text":"                fn kind(&self) -> ListenerKind {","highlight_start":1,"highlight_end":49},{"text":"                    ListenerKind::$action","highlight_start":1,"highlight_end":42},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn handle(&self, event: web_sys::Event) {","highlight_start":1,"highlight_end":58},{"text":"                    self.callback.emit($convert(event));","highlight_start":1,"highlight_end":57},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn passive(&self) -> bool {","highlight_start":1,"highlight_end":44},{"text":"                    match &self.callback {","highlight_start":1,"highlight_end":43},{"text":"                        Callback::Callback{passive, ..} => (*passive).unwrap_or($passive),","highlight_start":1,"highlight_end":91},{"text":"                        _ => $passive,","highlight_start":1,"highlight_end":39},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    )*};","highlight_start":1,"highlight_end":9},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: expected a `std::ops::Fn<(yew::InputEvent,)>` closure, found `yew::Callback<yew::KeyboardEvent>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:72:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        html! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <div class=\"container\">\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <h2>{\"Todo List\"}</h2>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <p>{self.count}</p>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        oninput={oninput}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected an `Fn<(yew::InputEvent,)>` closure, found `yew::Callback<yew::KeyboardEvent>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            </div>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::ops::Fn<(yew::InputEvent,)>` is not implemented for `yew::Callback<yew::KeyboardEvent>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `yew::html::IntoEventCallback<yew::InputEvent>` for `yew::Callback<yew::KeyboardEvent>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::html::oninput::Wrapper::__macro_new`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/tinnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/yew-0.19.3/src/html/listener/events.rs:132:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_short! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    onauxclick(MouseEvent)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    onclick(MouseEvent)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ontransitionstart(TransitionEvent)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `yew::html::oninput::Wrapper::__macro_new`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_action` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
